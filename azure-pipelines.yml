trigger:
  branches:
    include:
      - dev
      - master      # đổi từ main -> master

variables:
  buildConfiguration: 'Release'
  dotnetVersion: '8.0.x'
  azureServiceConnection: 'ServiceConnection_RestAPI_FarmTimeManagement'
  webAppName: 'flindersdevops'
  # Không dùng slot, nhưng giữ biến nếu sau này bạn cần
  webAppSlot: 'staging'

pool:
  name: 'SelfHosted_Agent_Tom'

stages:
# ===================== BUILD =====================
- stage: Build
  displayName: Build & Test & Package
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.sln'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration)'
        publishWebProjects: false

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"'
      continueOnError: true

    - task: DotNetCoreCLI@2
      displayName: Publish (dotnet publish)
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: ArchiveFiles@2
      displayName: Zip published output
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/webapp.zip'

    - publish: '$(Build.ArtifactStagingDirectory)/webapp.zip'
      displayName: 'Publish artifact'
      artifact: 'drop'

# ===================== DEPLOY PRODUCTION =====================
- stage: Deploy_Prod
  displayName: Deploy to Production
  dependsOn: Build
  # Chạy khi build OK và (push vào master hoặc PR target master)
  condition: >
    and(
      succeeded(),
      or(
        eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        and(
          eq(variables['Build.Reason'], 'PullRequest'),
          eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/master')
        )
      )
    )
  jobs:
  - deployment: DeployProd
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'drop'
              path: '$(Pipeline.Workspace)/drop'

          # Debug: in ra biến để kiểm tra nếu còn bị skip
          - powershell: |
              Write-Host "Build.SourceBranch              = $(Build.SourceBranch)"
              Write-Host "Build.Reason                    = $(Build.Reason)"
              Write-Host "System.PullRequest.TargetBranch = $(System.PullRequest.TargetBranch)"
              Write-Host "Package path                    = $(Pipeline.Workspace)\drop\webapp.zip"
            displayName: 'Print branch variables'

          - task: AzureWebApp@1
            displayName: 'Deploy to $(webAppName) - production'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/webapp.zip'
              # KHÔNG cấu hình slot -> deploy mặc định vào Production
